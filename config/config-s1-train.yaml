tag: GeometrySegmentation-CoronaryArtery-s1

dataset:
  defin_path: ./dataset_patches.py
  defin_parm:
    json_path: ./data.json     
    train_indexes: "1-950"                    
    valid_indexes: "951-1000"
    patch_size: 24                               # ← predict.py の (*8 + point) と自然に一致
    patches_per_case_train: 5
    patches_per_case_val: 2
    points_per_patch: 5000
    centerline_order: zyx                           # ← 中心線は ZYX 入力
    clamp_window: [-200, 400]                       # CT ウィンドウ（必要なら調整）
    deterministic: false
    force_same_patch: false

  batch_size: 1
  num_worker: 0
  isdroplast: false
  is_shuffle: true
  defin_sampler: null
  param_sampler: {}

network:
  use_cuda: true
  use_parallel: false
  modules:
    Unet:
      defin_path: './models/VoxelSeg.py'
      defin_parm: {in_channels: 1, out_channels: 1, channels: [64, 128, 256]}
      cur_params: &cur_params null
      int_method: &int_method kaiming
      optimizers: &optimizers {type: Adam, lr: 1.0e-3, cur_params: null}
      schedulers: &schedulers {type: CosineAnnealingLR, half_cycle: 200, eta_min: 1.0e-6}

    Gseg:
      defin_path: './models/GraphSeg.py'
      defin_parm: {coords_dim: 3, hidden_dim: 192, feats_dims: [128, 64, 32]}
      cur_params: *cur_params
      int_method: *int_method
      optimizers: *optimizers
      schedulers: *schedulers

  criterions:
    Imageloss:
      defin_path: './models/ImageLoss.py'
      defin_parm: {}
      weight: 1


    Graphloss:
      defin_path: './models/GraphLoss.py'
      defin_parm: {}
      weight: 1


trainer:
  checkpoint_mode: {dire: ./checkpoints/test, type: key_epoch}
  validation_step: 2
  threshold_grad: 1e5
  total_epoches: 100
  current_epoch: 1

monitor:
  index: chamfer
  logger: true
  stdstream: true
  tensorboardx: true

visualize:
  enable:  { enable: true, num_cases: 2 }
  num_cases: 2
